/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.util.Timer;
import java.util.TimerTask;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Manuel Blanco
 */
public class RelojFrame extends javax.swing.JFrame {

    /**
     * @return the run
     */
    public boolean isRun() {
        return run;
    }

    /**
     * @param run the run to set
     */
    public void setRun(boolean run) {
        this.run = run;
    }

    /**
     * Creates new form RelojFrame
     */
    Reloj reloj = new Reloj();
    Timer timer;
    private boolean run;
    SpinnerNumberModel modelForSpinnerSecond = new SpinnerNumberModel();
    SpinnerNumberModel modelForSpinnerMinute = new SpinnerNumberModel();
    SpinnerNumberModel modelForSpinnerHour = new SpinnerNumberModel();

    public RelojFrame() {
        initComponents();
        
        modelForSpinnerSecond.setMaximum(60);
        modelForSpinnerSecond.setMinimum(0);
        modelForSpinnerSecond.setStepSize(1);
        
        modelForSpinnerMinute.setMaximum(60);
        modelForSpinnerMinute.setMinimum(0);
        modelForSpinnerMinute.setStepSize(1);
        
        spinner_minutes.setModel(modelForSpinnerMinute);
        spinner_second.setModel(modelForSpinnerSecond);
        
        modelForSpinnerHour.setMaximum(12);
        modelForSpinnerHour.setMinimum(1);
        modelForSpinnerHour.setStepSize(1);
        modelForSpinnerHour.setValue(1);
        
        spinner_hour.setModel(modelForSpinnerHour);
        
        select_period.setSelectedIndex(0);
    }
    
    public void enableComponentsUI(){
        btn_run.setEnabled(true);
        btn_reset.setEnabled(true);
        
        //Inactivamos spinners
        spinner_hour.setEnabled(true);
        spinner_second.setEnabled(true);
        spinner_minutes.setEnabled(true);
        
        //Inactivamos combobox
        select_period.setEnabled(true);
    }
    
    public void setValueSpinners(){
        modelForSpinnerHour.setValue(reloj.getHour());
        modelForSpinnerMinute.setValue(reloj.getMinute());
        modelForSpinnerSecond.setValue(reloj.getSecond());
        
        if(reloj.getPeriod() == reloj.PeriodAM()){
            select_period.setSelectedIndex(0);
        }else{
            select_period.setSelectedIndex(1);
        }
    }
    
    public void showValueSpinners(){
        String h = (reloj.getHour() < 10) ? "0" + reloj.getHour() : String.valueOf(reloj.getHour());
        String m = (reloj.getMinute() < 10) ? "0" + reloj.getMinute() : String.valueOf(reloj.getMinute());
        String s = (reloj.getSecond() < 10) ? "0" + reloj.getSecond() : String.valueOf(reloj.getSecond());
        System.out.println(h + ":" + m + ":" + s + " " + reloj.getPeriod());
        labelTime.setText(h + ":" + m + ":" + s + " " + reloj.getPeriod());
    }
    
    public void run(){
        //Insertamos valores
        reloj.setSecond((Integer) spinner_second.getValue());
        reloj.setMinute((Integer) spinner_minutes.getValue());
        reloj.setHour((Integer) spinner_hour.getValue());
        if(select_period.getSelectedItem().equals("AM")){
           reloj.setPeriod(reloj.PeriodAM());
        }else{
            reloj.PeriodPM();
        }
        
        //chequeamos los valores
        boolean statusCheck = reloj.checkValuesReloj();
        
        if(statusCheck){
            
            setRun(true);
            //Iniciamos el reloj
            timer = new Timer();
            TimerTask task = new TimerTask() {
                 public void run() {
                    reloj.initReloj();
                     setValueSpinners();
                 }
             };
             // Programa la tarea para que se ejecute cada 1000 milisegundos (1 segundo)
             timer.scheduleAtFixedRate(task, 0, 1000);
        }else{
            enableComponentsUI();
        }
    }
    
    public void stop(){
        setRun(false);
        timer.cancel();
    }
    
    public void resetReloj(){
        reloj.resetReloj();
        setValueSpinners();
        labelTime.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_main = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        spinner_hour = new javax.swing.JSpinner();
        spinner_minutes = new javax.swing.JSpinner();
        spinner_second = new javax.swing.JSpinner();
        select_period = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btn_run = new javax.swing.JButton();
        btn_stop = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelTime = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_main.setBackground(new java.awt.Color(255, 255, 255));

        spinner_hour.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner_hourStateChanged(evt);
            }
        });

        spinner_minutes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner_minutesStateChanged(evt);
            }
        });

        spinner_second.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner_secondStateChanged(evt);
            }
        });

        select_period.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));

        jLabel2.setText("HORA");

        jLabel3.setText("MINUTOS");

        jLabel4.setText("SEGUNDOS");

        btn_run.setText("Comenzar");
        btn_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_runActionPerformed(evt);
            }
        });

        btn_stop.setText("Detener");
        btn_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopActionPerformed(evt);
            }
        });

        btn_reset.setText("Resetear");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(labelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinner_hour, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(spinner_minutes, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(spinner_second, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_run)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_stop)
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_reset)
                            .addComponent(select_period, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinner_hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner_minutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner_second, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(select_period, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_run)
                    .addComponent(btn_stop)
                    .addComponent(btn_reset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        jLabel1.setText("RELOJ SUPER SENSACIONAL");

        javax.swing.GroupLayout panel_mainLayout = new javax.swing.GroupLayout(panel_main);
        panel_main.setLayout(panel_mainLayout);
        panel_mainLayout.setHorizontalGroup(
            panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panel_mainLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_mainLayout.setVerticalGroup(
            panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(54, 54, 54)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_runActionPerformed
        //Inactivamos buttons
        btn_run.setEnabled(false);
        btn_reset.setEnabled(false);
        
        //Inactivamos spinners
        spinner_hour.setEnabled(false);
        spinner_second.setEnabled(false);
        spinner_minutes.setEnabled(false);
        
        //Inactivamos combobox
        select_period.setEnabled(false);
        
        run();
    }//GEN-LAST:event_btn_runActionPerformed

    private void btn_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopActionPerformed
        stop();
        enableComponentsUI();
    }//GEN-LAST:event_btn_stopActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        resetReloj();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void spinner_secondStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner_secondStateChanged
        if(isRun())showValueSpinners();
    }//GEN-LAST:event_spinner_secondStateChanged

    private void spinner_minutesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner_minutesStateChanged
        if(isRun())showValueSpinners();
    }//GEN-LAST:event_spinner_minutesStateChanged

    private void spinner_hourStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner_hourStateChanged
       if(isRun())showValueSpinners();
    }//GEN-LAST:event_spinner_hourStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelojFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelojFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelojFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelojFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelojFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_run;
    private javax.swing.JButton btn_stop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelTime;
    private javax.swing.JPanel panel_main;
    private javax.swing.JComboBox<String> select_period;
    private javax.swing.JSpinner spinner_hour;
    private javax.swing.JSpinner spinner_minutes;
    private javax.swing.JSpinner spinner_second;
    // End of variables declaration//GEN-END:variables
}
